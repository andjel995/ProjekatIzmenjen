/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Angazovanje;
import domen.FormaMod;
import domen.Predmet;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import logika.Kontroler;
import model.tabele.ModelTabeleAngazovanja;
import session.Session;

/**
 *
 * @author User
 */
public class PretragaAngazovanjaForma extends javax.swing.JDialog {

    /**
     * Creates new form PretragaAngazovanjaForma
     */
    public PretragaAngazovanjaForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centriraj();
        srediTabelu();
        popuniPredmete();
        this.getContentPane().setBackground(Color.lightGray);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbPredmet = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPregledAngazovanja = new javax.swing.JTable();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Predmet:");

        cmbPredmet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPredmetItemStateChanged(evt);
            }
        });
        cmbPredmet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPredmetActionPerformed(evt);
            }
        });

        tblPregledAngazovanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPregledAngazovanja);

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(cmbPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnIzmeni)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPredmetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPredmetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPredmetActionPerformed

    private void cmbPredmetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPredmetItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
           ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblPregledAngazovanja.getModel();
           mta.obrisiSvaAngazovanja();
           popuniTabelu();
        }
    }//GEN-LAST:event_cmbPredmetItemStateChanged

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        // TODO add your handling code here:
            Predmet p = (Predmet) cmbPredmet.getSelectedItem();

            JOptionPane.showMessageDialog(this, "Predmet za izmenu " + p.getNaziv(),"",JOptionPane.INFORMATION_MESSAGE);

            Session.getInstance().getUseCaseParams().clear();
            Session.getInstance().getUseCaseParams().put("predmetId", p.getPredmetId());
            UnosAngazovanjaForma uaf = new UnosAngazovanjaForma(null, true, FormaMod.IZMENA);
            uaf.setVisible(true);
            
            ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblPregledAngazovanja.getModel();
           srediTabelu();
           popuniTabelu();
    }//GEN-LAST:event_btnIzmeniActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JComboBox<Object> cmbPredmet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPregledAngazovanja;
    // End of variables declaration//GEN-END:variables

    private void centriraj() {
        this.setLocationRelativeTo(null);
    }
    private void popuniPredmete() {
        cmbPredmet.removeAllItems();
        Kontroler kontroler = Kontroler.dajInstancu();
        try{
        List<Predmet> predmeti = kontroler.dajPredmete();
        
        for(Predmet predmet : predmeti)
        {
            cmbPredmet.addItem(predmet);
        }
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this, "Greska pri ucitavanju predmeta");
            System.out.println(ex.getMessage());
        }
    }
    private void srediTabelu()
    {
        ModelTabeleAngazovanja mta = new ModelTabeleAngazovanja(new ArrayList<>());
        tblPregledAngazovanja.setModel(mta);

    }
    private void popuniTabelu() 
    {
        List<Angazovanje> lista = new ArrayList<>();
        try 
        {
            lista = Kontroler.dajInstancu().dajAngazovanja();
        } catch (Exception ex) 
        {
            JOptionPane.showMessageDialog(this, "Greska pri ucitavanju angazovanja iz baze");
            System.out.println(ex.getMessage());
            return;
        }
        Predmet izabrani = (Predmet) cmbPredmet.getSelectedItem();
        ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblPregledAngazovanja.getModel();
        for(Angazovanje angazovanje : lista)
        {
            if(angazovanje.getPredmet().equals(izabrani))
                mta.dodajAngazovanje(angazovanje);
        }
        tblPregledAngazovanja.setModel(mta);
    }

}
